name: Deploy

on:
  repository_dispatch:
    types: deploy

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    steps:
      - uses: chrnorm/deployment-action@releases/v1
        name: Create GitHub deployment
        id: deployment
        with:
          token: ${{ secrets.PAT }}
          target_url: https://my-app-url.com
          environment: ${{ github.event.client_payload.environment }}
          ref: ${{ github.event.client_payload.ref }}
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.client_payload.ref }}
      - name: Restore cache
        uses: actions/cache@master
        with:
          path: |
            node_modules
            */*/node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
      - name: Install dependencies
        run: yarn --frozen-lockfile
      - name: Deploy
        run: yarn deploy --env ${{ github.event.client_payload.environment }}
      - name: Update deployment status (success)
        if: success()
        uses: chrnorm/deployment-status@releases/v1
        with:
          token: ${{ secrets.PAT }}
          state: "success"
          target_url: https://my-app-url.com
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
      - name: Update deployment status (failure)
        if: failure()
        uses: chrnorm/deployment-status@releases/v1
        with:
          token: ${{ secrets.PAT }}
          state: "failure"
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
